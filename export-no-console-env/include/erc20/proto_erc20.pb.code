/* Automatically generated nanopb constant definitions */
/* Generated by nanopb-0.3.9 at Fri Sep  7 15:45:49 2018. */

#include "proto_erc20.pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif



const pb_field_t erc20_transaction_req_parameter_t_fields[7] = {
    PB_FIELD(  1, BYTES   , REQUIRED, STATIC  , FIRST, erc20_transaction_req_parameter_t, nonce, nonce, 0),
    PB_FIELD(  2, BYTES   , REQUIRED, STATIC  , OTHER, erc20_transaction_req_parameter_t, gas_price, nonce, 0),
    PB_FIELD(  3, BYTES   , REQUIRED, STATIC  , OTHER, erc20_transaction_req_parameter_t, gas_limit, gas_price, 0),
    PB_FIELD(  4, UINT32  , REQUIRED, STATIC  , OTHER, erc20_transaction_req_parameter_t, chain_id, gas_limit, 0),
    PB_FIELD(  5, MESSAGE , REQUIRED, STATIC  , OTHER, erc20_transaction_req_parameter_t, contract, chain_id, &erc20_contract_info_t_fields),
    PB_FIELD( 10, STRING  , REQUIRED, STATIC  , OTHER, erc20_transaction_req_parameter_t, key_path, contract, 0),
    PB_LAST_FIELD
};

const pb_field_t erc20_transaction_res_parameter_t_fields[5] = {
    PB_FIELD(  1, BYTES   , REQUIRED, STATIC  , FIRST, erc20_transaction_res_parameter_t, signed_tx, signed_tx, 0),
    PB_FIELD(  2, BYTES   , REQUIRED, STATIC  , OTHER, erc20_transaction_res_parameter_t, sign_v, signed_tx, 0),
    PB_FIELD(  3, BYTES   , REQUIRED, STATIC  , OTHER, erc20_transaction_res_parameter_t, sign_r, sign_v, 0),
    PB_FIELD(  4, BYTES   , REQUIRED, STATIC  , OTHER, erc20_transaction_res_parameter_t, sign_s, sign_r, 0),
    PB_LAST_FIELD
};

const pb_field_t erc20_contract_info_t_fields[9] = {
    PB_FIELD(  1, STRING  , REQUIRED, STATIC  , FIRST, erc20_contract_info_t, name, name, 0),
    PB_FIELD(  2, STRING  , REQUIRED, STATIC  , OTHER, erc20_contract_info_t, symbol, name, 0),
    PB_FIELD(  3, BYTES   , REQUIRED, STATIC  , OTHER, erc20_contract_info_t, contract_address, symbol, 0),
    PB_FIELD(  4, STRING  , REQUIRED, STATIC  , OTHER, erc20_contract_info_t, contract_address_str, contract_address, 0),
    PB_FIELD(  5, BYTES   , REQUIRED, STATIC  , OTHER, erc20_contract_info_t, to_address, contract_address_str, 0),
    PB_FIELD(  6, STRING  , REQUIRED, STATIC  , OTHER, erc20_contract_info_t, to_address_str, to_address, 0),
    PB_FIELD(  7, UINT32  , REQUIRED, STATIC  , OTHER, erc20_contract_info_t, decimals, to_address_str, 0),
    PB_FIELD(  8, BYTES   , REQUIRED, STATIC  , OTHER, erc20_contract_info_t, value, decimals, 0),
    PB_LAST_FIELD
};


/* Check that field information fits in pb_field_t */
#if !defined(PB_FIELD_32BIT)
/* If you get an error here, it means that you need to define PB_FIELD_32BIT
 * compile-time option. You can do that in pb.h or on compiler command line.
 * 
 * The reason you need to do this is that some of your messages contain tag
 * numbers or field sizes that are larger than what can fit in 8 or 16 bit
 * field descriptors.
 */
PB_STATIC_ASSERT((pb_membersize(erc20_transaction_req_parameter_t, contract) < 65536 && pb_membersize(erc20_transaction_res_parameter_t, signed_tx) < 65536), YOU_MUST_DEFINE_PB_FIELD_32BIT_FOR_MESSAGES_erc20_transaction_req_parameter_t_erc20_transaction_res_parameter_t_erc20_contract_info_t)
#endif

#if !defined(PB_FIELD_16BIT) && !defined(PB_FIELD_32BIT)
#error Field descriptor for erc20_transaction_res_parameter_t.signed_tx is too large. Define PB_FIELD_16BIT to fix this.
#endif


/* @@protoc_insertion_point(eof) */
