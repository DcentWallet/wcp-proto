/* Automatically generated nanopb constant definitions */
/* Generated by nanopb-0.3.9 at Tue Apr 10 01:07:16 2018. */

#include "proto_bitcoin.pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif



const pb_field_t bitcoin_transaction_begin_req_parameter_t_fields[6] = {
    PB_FIELD(  1, UINT32  , REQUIRED, STATIC  , FIRST, bitcoin_transaction_begin_req_parameter_t, version, version, 0),
    PB_FIELD(  2, UINT32  , REQUIRED, STATIC  , OTHER, bitcoin_transaction_begin_req_parameter_t, tx_blk_size, version, 0),
    PB_FIELD(  5, MESSAGE , REPEATED, STATIC  , OTHER, bitcoin_transaction_begin_req_parameter_t, input, tx_blk_size, &bitcoin_transaction_input_t_fields),
    PB_FIELD(  7, MESSAGE , REPEATED, STATIC  , OTHER, bitcoin_transaction_begin_req_parameter_t, output, input, &bitcoin_transaction_output_t_fields),
    PB_FIELD(  8, UINT32  , REQUIRED, STATIC  , OTHER, bitcoin_transaction_begin_req_parameter_t, locktime, output, 0),
    PB_LAST_FIELD
};

const pb_field_t bitcoin_transaction_update_script_req_parameter_t_fields[3] = {
    PB_FIELD(  1, UINT32  , REQUIRED, STATIC  , FIRST, bitcoin_transaction_update_script_req_parameter_t, input_idx, input_idx, 0),
    PB_FIELD(  2, BYTES   , REQUIRED, STATIC  , OTHER, bitcoin_transaction_update_script_req_parameter_t, script, input_idx, 0),
    PB_LAST_FIELD
};

const pb_field_t bitcoin_transaction_update_prevtx_req_parameter_t_fields[4] = {
    PB_FIELD(  1, UINT32  , REQUIRED, STATIC  , FIRST, bitcoin_transaction_update_prevtx_req_parameter_t, input_idx, input_idx, 0),
    PB_FIELD(  2, UINT32  , REQUIRED, STATIC  , OTHER, bitcoin_transaction_update_prevtx_req_parameter_t, prev_tx_blk_idx, input_idx, 0),
    PB_FIELD(  3, BYTES   , REQUIRED, STATIC  , OTHER, bitcoin_transaction_update_prevtx_req_parameter_t, prev_tx_blk, prev_tx_blk_idx, 0),
    PB_LAST_FIELD
};

const pb_field_t bitcoin_transaction_finish_res_parameter_t_fields[3] = {
    PB_FIELD(  1, UINT32  , REQUIRED, STATIC  , FIRST, bitcoin_transaction_finish_res_parameter_t, tx_size, tx_size, 0),
    PB_FIELD(  2, UINT32  , REQUIRED, STATIC  , OTHER, bitcoin_transaction_finish_res_parameter_t, tx_blk_size, tx_size, 0),
    PB_LAST_FIELD
};

const pb_field_t bitcoin_transaction_retrieve_res_parameter_t_fields[3] = {
    PB_FIELD(  1, UINT32  , REQUIRED, STATIC  , FIRST, bitcoin_transaction_retrieve_res_parameter_t, tx_blk_idx, tx_blk_idx, 0),
    PB_FIELD(  2, BYTES   , REQUIRED, STATIC  , OTHER, bitcoin_transaction_retrieve_res_parameter_t, tx_blk, tx_blk_idx, 0),
    PB_LAST_FIELD
};

const pb_field_t bitcoin_transaction_input_t_fields[6] = {
    PB_FIELD(  1, UINT32  , REQUIRED, STATIC  , FIRST, bitcoin_transaction_input_t, prev_tx_size, prev_tx_size, 0),
    PB_FIELD(  2, UINT32  , REQUIRED, STATIC  , OTHER, bitcoin_transaction_input_t, utxo_idx, prev_tx_size, 0),
    PB_FIELD(  3, UENUM   , REQUIRED, STATIC  , OTHER, bitcoin_transaction_input_t, type, utxo_idx, 0),
    PB_FIELD(  4, STRING  , REQUIRED, STATIC  , OTHER, bitcoin_transaction_input_t, key_path, type, 0),
    PB_FIELD(  5, UINT32  , OPTIONAL, STATIC  , OTHER, bitcoin_transaction_input_t, sequence, key_path, 0),
    PB_LAST_FIELD
};

const pb_field_t bitcoin_transaction_output_t_fields[4] = {
    PB_FIELD(  1, UENUM   , REQUIRED, STATIC  , FIRST, bitcoin_transaction_output_t, type, type, 0),
    PB_FIELD(  2, UINT64  , REQUIRED, STATIC  , OTHER, bitcoin_transaction_output_t, value, type, 0),
    PB_FIELD(  3, STRING  , REPEATED, STATIC  , OTHER, bitcoin_transaction_output_t, to_address, value, 0),
    PB_LAST_FIELD
};



/* Check that field information fits in pb_field_t */
#if !defined(PB_FIELD_32BIT)
/* If you get an error here, it means that you need to define PB_FIELD_32BIT
 * compile-time option. You can do that in pb.h or on compiler command line.
 * 
 * The reason you need to do this is that some of your messages contain tag
 * numbers or field sizes that are larger than what can fit in 8 or 16 bit
 * field descriptors.
 */
PB_STATIC_ASSERT((pb_membersize(bitcoin_transaction_begin_req_parameter_t, input[0]) < 65536 && pb_membersize(bitcoin_transaction_begin_req_parameter_t, output[0]) < 65536 && pb_membersize(bitcoin_transaction_update_script_req_parameter_t, script) < 65536 && pb_membersize(bitcoin_transaction_update_prevtx_req_parameter_t, prev_tx_blk) < 65536 && pb_membersize(bitcoin_transaction_retrieve_res_parameter_t, tx_blk) < 65536), YOU_MUST_DEFINE_PB_FIELD_32BIT_FOR_MESSAGES_bitcoin_transaction_begin_req_parameter_t_bitcoin_transaction_update_script_req_parameter_t_bitcoin_transaction_update_prevtx_req_parameter_t_bitcoin_transaction_finish_res_parameter_t_bitcoin_transaction_retrieve_res_parameter_t_bitcoin_transaction_input_t_bitcoin_transaction_output_t)
#endif

#if !defined(PB_FIELD_16BIT) && !defined(PB_FIELD_32BIT)
#error Field descriptor for bitcoin_transaction_retrieve_res_parameter_t.tx_blk is too large. Define PB_FIELD_16BIT to fix this.
#endif


/* @@protoc_insertion_point(eof) */
