/* Automatically generated nanopb constant definitions */
/* Generated by nanopb-0.3.9 at Tue Apr 10 01:07:15 2018. */

#include "proto_device.pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif



const pb_field_t device_get_info_res_parameter_t_fields[8] = {
    PB_FIELD(  1, STRING  , REQUIRED, STATIC  , FIRST, device_get_info_res_parameter_t, devid, devid, 0),
    PB_FIELD(  2, STRING  , REQUIRED, STATIC  , OTHER, device_get_info_res_parameter_t, fw_ver, devid, 0),
    PB_FIELD(  3, STRING  , REQUIRED, STATIC  , OTHER, device_get_info_res_parameter_t, ksm_ver, fw_ver, 0),
    PB_FIELD(  4, UENUM   , REQUIRED, STATIC  , OTHER, device_get_info_res_parameter_t, state, ksm_ver, 0),
    PB_FIELD(  5, MESSAGE , REPEATED, STATIC  , OTHER, device_get_info_res_parameter_t, coin, state, &device_coin_list_t_fields),
    PB_FIELD(  6, MESSAGE , REQUIRED, STATIC  , OTHER, device_get_info_res_parameter_t, fingerprint, coin, &device_fingerprint_t_fields),
    PB_FIELD(  7, STRING  , REQUIRED, STATIC  , OTHER, device_get_info_res_parameter_t, label, fingerprint, 0),
    PB_LAST_FIELD
};

const pb_field_t device_set_label_req_parameter_t_fields[2] = {
    PB_FIELD(  1, STRING  , REQUIRED, STATIC  , FIRST, device_set_label_req_parameter_t, label, label, 0),
    PB_LAST_FIELD
};

const pb_field_t device_fingerprint_t_fields[3] = {
    PB_FIELD(  1, UINT32  , REQUIRED, STATIC  , FIRST, device_fingerprint_t, max_num, max_num, 0),
    PB_FIELD(  2, UINT32  , REQUIRED, STATIC  , OTHER, device_fingerprint_t, enrolled, max_num, 0),
    PB_LAST_FIELD
};

const pb_field_t device_coin_list_t_fields[3] = {
    PB_FIELD(  1, STRING  , REQUIRED, STATIC  , FIRST, device_coin_list_t, name, name, 0),
    PB_FIELD(  2, STRING  , REQUIRED, STATIC  , OTHER, device_coin_list_t, symbol, name, 0),
    PB_LAST_FIELD
};



/* Check that field information fits in pb_field_t */
#if !defined(PB_FIELD_32BIT)
/* If you get an error here, it means that you need to define PB_FIELD_32BIT
 * compile-time option. You can do that in pb.h or on compiler command line.
 * 
 * The reason you need to do this is that some of your messages contain tag
 * numbers or field sizes that are larger than what can fit in 8 or 16 bit
 * field descriptors.
 */
PB_STATIC_ASSERT((pb_membersize(device_get_info_res_parameter_t, coin[0]) < 65536 && pb_membersize(device_get_info_res_parameter_t, fingerprint) < 65536), YOU_MUST_DEFINE_PB_FIELD_32BIT_FOR_MESSAGES_device_get_info_res_parameter_t_device_set_label_req_parameter_t_device_fingerprint_t_device_coin_list_t)
#endif

#if !defined(PB_FIELD_16BIT) && !defined(PB_FIELD_32BIT)
/* If you get an error here, it means that you need to define PB_FIELD_16BIT
 * compile-time option. You can do that in pb.h or on compiler command line.
 * 
 * The reason you need to do this is that some of your messages contain tag
 * numbers or field sizes that are larger than what can fit in the default
 * 8 bit descriptors.
 */
PB_STATIC_ASSERT((pb_membersize(device_get_info_res_parameter_t, coin[0]) < 256 && pb_membersize(device_get_info_res_parameter_t, fingerprint) < 256), YOU_MUST_DEFINE_PB_FIELD_16BIT_FOR_MESSAGES_device_get_info_res_parameter_t_device_set_label_req_parameter_t_device_fingerprint_t_device_coin_list_t)
#endif


/* @@protoc_insertion_point(eof) */
