/* ############################################################ */
/* //////////////////////////////////////////////////////////// */
/* */
/* //////////////////////////////////////////////////////////// */
/* ############################################################ */

syntax = "proto2";

package bitcoin;
import "nanopb.proto";

/* ############################################################ */
/* //////////////////////////////////////////////////////////// */
/* */
/* //////////////////////////////////////////////////////////// */
/* ############################################################ */

message transaction_begin_req_parameter_t {
	required uint32 version = 1;
	required transaction_type_t tx_type = 2;
	required uint32 tx_blk_size = 3;
	required uint32 input_num = 4;
	repeated transaction_input_t input = 5 [(nanopb).max_count = 60];
	required uint32 output_num = 6;
	repeated transaction_output_t output = 7 [(nanopb).max_count = 10];
}

// #
//

message transaction_update_prevtx_req_parameter_t {
	required uint32 input_idx = 1;
	required uint32 prev_tx_blk_idx = 2;
	required bytes prev_tx_blk = 3 [(nanopb).max_size = 4000];
}

// #
//

message transaction_finish_res_parameter_t {
	required uint32 tx_size = 1;
	required uint32 tx_blk_size = 2;
}

// #
//

message transaction_retrieve_res_parameter_t {
	required uint32 tx_blk_idx = 1;
	required bytes tx_blk = 2 [(nanopb).max_size = 4000];
}

/* ############################################################ */
/* //////////////////////////////////////////////////////////// */
/* */
/* //////////////////////////////////////////////////////////// */
/* ############################################################ */

enum transaction_type_t {
	p2pkh = 0;
	p2pk = 1;
	p2sh = 2;
	multisig = 3;
}

message transaction_input_t {
	required uint32 prev_tx_size = 1;
	required uint32 utxo_idx = 2;
	required string key_path = 3 [(nanopb).max_size = 33];
}

message transaction_output_t {
	required uint64 value = 1;
	optional string to_address = 2 [(nanopb).max_size = 64];
	optional string change_path = 3 [(nanopb).max_size = 33];
}

/* ############################################################ */
/* //////////////////////////////////////////////////////////// */
/* */
/* //////////////////////////////////////////////////////////// */
/* ############################################################ */

