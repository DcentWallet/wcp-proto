/* ############################################################ */
/* //////////////////////////////////////////////////////////// */
/* */
/* //////////////////////////////////////////////////////////// */
/* ############################################################ */

syntax = "proto2";

package device;
import "nanopb.proto";

/* ############################################################ */
/* //////////////////////////////////////////////////////////// */
/* */
/* //////////////////////////////////////////////////////////// */
/* ############################################################ */

message get_coin_info_req_parameter_t {
	required uint32 coin_start_idx = 1;
	required uint32 coin_list_num = 2;
}

message get_coin_info_res_parameter_t {
	repeated coin_list_t coin = 5 [(nanopb).max_count = 10];
}

// #
//

message get_info_res_parameter_t {
	required string devid = 1 [(nanopb).max_size = 32];
	required string fw_ver = 2 [(nanopb).max_size = 14];
	required string ksm_ver = 3 [(nanopb).max_size = 14];
	required wallet_state_t state = 4;
	required uint32 coin_num = 5;
	required fingerprint_t fingerprint = 6; 
}

/* ############################################################ */
/* //////////////////////////////////////////////////////////// */
/* */
/* //////////////////////////////////////////////////////////// */
/* ############################################################ */

enum wallet_state_t {
	init = 0;
	ready = 1;
	secure = 2;
	locked_fp = 3;
	locked_pin = 4;
	invalid = 0xff;
}

message fingerprint_t {
	required uint32 max_num = 1;
	required uint32 enrolled = 2;
}

message coin_list_t {
	required string name = 1 [(nanopb).max_size = 9];
}

/* ############################################################ */
/* //////////////////////////////////////////////////////////// */
/* */
/* //////////////////////////////////////////////////////////// */
/* ############################################################ */

